name: Build and Test on Windows

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download and Install MinGW
        run: |
          # Download MinGW
          Invoke-WebRequest -Uri "https://github.com/niXman/mingw-builds-binaries/releases/download/12.2.0-rt_v10-rev2/x86_64-12.2.0-release-win32-seh-rt_v10-rev2.7z" -OutFile mingw.7z
          # Extract MinGW
          7z x mingw.7z -oC:\mingw64

      - name: Download and Install SDL2
        run: |
          # Set up directories
          mkdir -p C:\mingw64\include\SDL2
          mkdir -p C:\mingw64\lib

          # Download SDL2 development libraries
          Invoke-WebRequest -Uri https://www.libsdl.org/release/SDL2-devel-2.0.14-mingw.zip -OutFile SDL2.zip
          7z x SDL2.zip -oSDL2

          # Copy headers and libs to appropriate directories
          xcopy SDL2\SDL2-2.0.14\x86_64-w64-mingw32\include\SDL2 C:\mingw64\include\SDL2 /E /I /Y
          xcopy SDL2\SDL2-2.0.14\x86_64-w64-mingw32\lib C:\mingw64\lib /E /I /Y

      - name: Add MinGW and SDL2 to PATH
        run: echo "C:\mingw64\bin" >> $GITHUB_PATH

      - name: Verify SDL2 Installation
        run: |
          dir C:\mingw64\include\SDL2
          dir C:\mingw64\lib

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Install Dependencies
        run: |
          cd player
          go mod tidy

      - name: Verify Go Environment
        run: go env

      - name: Verify Compiler
        run: |
          gcc --version
          g++ --version

      - name: Verify Environment Variables
        run: |
          echo "CGO_CFLAGS: $env:CGO_CFLAGS"
          echo "CGO_LDFLAGS: $env:CGO_LDFLAGS"

      - name: Build Package
        env:
          CGO_CFLAGS: "-IC:/mingw64/include/SDL2"
          CGO_LDFLAGS: "-LC:/mingw64/lib"
        run: |
          mkdir -p ../JukaGUI-Trimui-Windows
          cd player
          echo "CGO_CFLAGS: $env:CGO_CFLAGS"
          echo "CGO_LDFLAGS: $env:CGO_LDFLAGS"
          go build -o ../JukaGUI-Trimui-Windows/JukaGUI.exe ./
          echo "Build completed."
